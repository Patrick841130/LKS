events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=explorer:10m rate=30r/s;

    # Upstream servers
    upstream lks_explorer {
        server lks-explorer:5000;
    }

    upstream lks_admin {
        server lks-admin:5001;
    }

    upstream lks_node_rpc {
        server lks-node:8545;
    }

    # Main server block
    server {
        listen 80;
        server_name lksnetwork.io www.lksnetwork.io;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server block - LKS Network Explorer
    server {
        listen 443 ssl http2;
        server_name lksnetwork.io www.lksnetwork.io;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/lksnetwork.io.crt;
        ssl_certificate_key /etc/nginx/ssl/lksnetwork.io.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # LKS Network Explorer (accessible via /lks-network path)
        location /lks-network {
            limit_req zone=explorer burst=50 nodelay;
            proxy_pass http://lks_explorer/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Main lksnetwork.io website (placeholder - will serve main site)
        location / {
            # This will serve the main lksnetwork.io website
            # For now, redirect to LKS Network explorer
            return 301 https://$server_name/lks-network;
        }

        # LKS Network API endpoints
        location /lks-network/api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://lks_explorer/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health checks
        location /health {
            proxy_pass http://lks_explorer;
            access_log off;
        }
    }

    # Admin dashboard
    server {
        listen 443 ssl http2;
        server_name admin.lksnetwork.io;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/lksnetwork.io.crt;
        ssl_certificate_key /etc/nginx/ssl/lksnetwork.io.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Admin interface
        location / {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://lks_admin;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # RPC endpoint
    server {
        listen 443 ssl http2;
        server_name rpc.lksnetwork.io;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/lksnetwork.io.crt;
        ssl_certificate_key /etc/nginx/ssl/lksnetwork.io.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # RPC endpoint
        location / {
            limit_req zone=api burst=100 nodelay;
            proxy_pass http://lks_node_rpc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
        }
    }
}
