apiVersion: v1
kind: Namespace
metadata:
  name: lks-network
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lks-node
  namespace: lks-network
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lks-node
  template:
    metadata:
      labels:
        app: lks-node
    spec:
      containers:
      - name: lks-node
        image: lks-network/node:latest
        ports:
        - containerPort: 8545
        - containerPort: 8546
        - containerPort: 30303
        env:
        - name: CHAIN_ID
          value: "1337"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: node-data
          mountPath: /data
      volumes:
      - name: node-data
        persistentVolumeClaim:
          claimName: lks-node-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: lks-node-service
  namespace: lks-network
spec:
  selector:
    app: lks-node
  ports:
  - name: rpc
    port: 8545
    targetPort: 8545
  - name: websocket
    port: 8546
    targetPort: 8546
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lks-api
  namespace: lks-network
spec:
  replicas: 5
  selector:
    matchLabels:
      app: lks-api
  template:
    metadata:
      labels:
        app: lks-api
    spec:
      containers:
      - name: lks-api
        image: lks-network/api:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: DB_SERVER
          valueFrom:
            secretKeyRef:
              name: lks-secrets
              key: db-server
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lks-secrets
              key: db-password
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: lks-api-service
  namespace: lks-network
spec:
  selector:
    app: lks-api
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lks-explorer
  namespace: lks-network
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lks-explorer
  template:
    metadata:
      labels:
        app: lks-explorer
    spec:
      containers:
      - name: lks-explorer
        image: lks-network/explorer:latest
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__LKSDatabase
          valueFrom:
            secretKeyRef:
              name: lks-secrets
              key: connection-string
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: lks-explorer-service
  namespace: lks-network
spec:
  selector:
    app: lks-explorer
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: lks-network-ingress
  namespace: lks-network
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "1000"
spec:
  tls:
  - hosts:
    - lks-network.com
    - www.lks-network.com
    - api.lks-network.com
    secretName: lks-network-tls
  rules:
  - host: lks-network.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: lks-explorer-service
            port:
              number: 80
  - host: www.lks-network.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: lks-explorer-service
            port:
              number: 80
  - host: api.lks-network.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: lks-api-service
            port:
              number: 3000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lks-node-pvc
  namespace: lks-network
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd
